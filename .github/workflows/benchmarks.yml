name: benchmark_compare

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

jobs:

  # this job will list the benchmark files and store them as a json array for later use
  list-benchmarks:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # define an output from this job that can be read by other jobs
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      # check out just the benchmarks directory
      - uses: snow-actions/sparse-checkout@v1.1.0
        with:
          patterns: benchmarks
      # list the benchmark files and store them to the matrix output
      - id: set-matrix
        run: cd benchmarks && echo "::set-output name=matrix::$(ls | jq -R -s -c 'split("\n")[:-1]')"

  # this job will run each benchmark and compare to the previous values
  bench:
    # run after list-benchmarks finishes
    needs: list-benchmarks
    runs-on: ubuntu-latest
    # parallelize this job per benchmark script
    strategy:
        matrix:
            benchmark: ${{ fromJson(needs.list-benchmarks.outputs.matrix) }}
        # don't cancel other benchmarks when one fails
        fail-fast: false
  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
        with:
          # TODO remove this, is only required for fake commit_count benchmark
          fetch-depth: 0
      - name: "Run benchmark: ${{ matrix.benchmark }}"
        run: |
          mkdir -p "${{ runner.temp }}/current" && "benchmarks/${{ matrix.benchmark }}" > "${{ runner.temp	}}/current/${{ matrix.benchmark }}"

      - name: Fetch this benchmark from the last successful workflow
        # TODO smarter error handling
        continue-on-error: true
        uses: dawidd6/action-download-artifact@v2
        with:
          # Optional, the status or conclusion of a completed workflow to search for
          # Can be one of a workflow conclusion:
          #   "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
          # Or a workflow status:
          #   "completed", "in_progress", "queued"
          workflow_conclusion: success
          # Optional, will use the branch
          branch: main
          # Optional, defaults to all types
          event: push
          # Uploaded artifact name
          name: ${{ matrix.benchmark }}
                # Optional, a directory where to extract artifact(s), defaults to the current directory
          path: ${{ runner.temp	}}/previous
        
      - name: Upload the new benchmark results to an artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.benchmark }}
          path: ${{ runner.temp	}}/current/${{ matrix.benchmark }}

      # this comes last so that the upload will still happen if this fails
      - name: Compare current and previous bencmarks
        # TODO smarter error handling
        continue-on-error: true
        # only run this step if all previous steps completed without error
        if: ${{ success() }}
        run: >
          jq
          --argfile prev ${{ runner.temp }}/previous/${{ matrix.benchmark }}
          --argfile curr ${{ runner.temp}}/current/${{ matrix.benchmark }}
          -n
          '
            $prev
            | [
                keys[]
                | {"\(.)":{ prev:$prev[.], curr:$curr[.], change:($curr[.]-$prev[.]), change_pct:(($curr[.]/$prev[.]-1)*100) }}
              ]
            | add
          ' | tee "${{ runner.temp	}}/comparison"

      # TODO add informative annotation https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-error-message
      - name: Error on unacceptable benchmark increases
        run: |
          jq -e 'false == any( .[] ; .change_pct > 2)' "${{ runner.temp	}}/comparison"
          EXIT_CODE=$?
          if [ $EXIT_CODE -ne 0 ]
          then
            ANNOTATION=$( jq --argfile prev prev --argfile curr curr -n -r '$prev | [keys[] | {"\(.)":{ prev:$prev[.], curr:$curr[.], change:($curr[.]-$prev[.]), change_pct:(($curr[.]/$prev[.]-1)*100) }}] | add | [to_entries[] | select(.value.change_pct>2) | "\(.key) increased from \(.value.prev) to \(.value.curr)"] | join(", ")' )
            echo "::error file=benchmarks/${{ matrix.benchmark }},title=Benchmark regression::$ANNOTATION"
          fi
          (exit $EXIT_CODE)